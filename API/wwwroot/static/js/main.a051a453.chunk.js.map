{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/testErrors.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","console","log","modalStateErrors","key","push","flat","history","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","description","category","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendence","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","profile","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivites","loadingActivites","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useParams","useHistory","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","length","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","panes","menuItem","pane","Tab","Pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.a051a453.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Profile, UserActivity } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        }\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          console.log(\"validation error on server\");\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error(\"unauthorized\");\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post<void>(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(\r\n      `/profiles/${username}/activities?predicate=${predicate}`\r\n    ),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  date: Date | null;\r\n  description: string;\r\n  category: string;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername: string;\r\n  isCancelled: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(init?: ActivityFormValues) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  description: string = \"\";\r\n  category: string = \"\";\r\n  date: Date | null = null;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(activity?: ActivityFormValues) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.city = activity.city;\r\n      this.venue = activity.venue;\r\n    }\r\n  }\r\n}\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}\r\n","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, PagingParams } from \"../models/pagination\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  editMode = false;\r\n  loading = false;\r\n  loadingInitial = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set(\"all\", true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParams: PagingParams) => {\r\n    this.pagingParams = pagingParams;\r\n  };\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== \"startDate\") this.predicate.delete(key);\r\n      });\r\n    };\r\n    switch (predicate) {\r\n      case \"all\":\r\n        resetPredicate();\r\n        this.predicate.set(\"all\", true);\r\n        break;\r\n      case \"isGoing\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isGoing\", true);\r\n        break;\r\n      case \"isHost\":\r\n        resetPredicate();\r\n        this.predicate.set(\"isHost\", true);\r\n        break;\r\n      case \"startDate\":\r\n        this.predicate.delete(\"startDate\");\r\n        this.predicate.set(\"startDate\", value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\r\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, (value as Date).toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, \"dd MMM yyyy\");\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n      result.data.forEach((activity) => {\r\n        this.setActivity(activity);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n        this.setLoadingInitial(false);\r\n        return activity;\r\n      } catch (e) {\r\n        console.log(e);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(\r\n        (a) => a.username === user.username\r\n      );\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find(\r\n        (x) => x.username === activity.hostUsername\r\n      );\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user!.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivity = {\r\n            ...this.getActivity(activity.id),\r\n            ...activity,\r\n          };\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.loading = false;\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendence = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees =\r\n            this.selectedActivity.attendees?.filter(\r\n              (a) => a.username !== user?.username\r\n            );\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled =\r\n          !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(\r\n          this.selectedActivity!.id,\r\n          this.selectedActivity!\r\n        );\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  clearSelectedActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach((activity) => {\r\n      activity.attendees.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.following\r\n            ? attendee.followersCount--\r\n            : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userActivites: UserActivity[] = [];\r\n  loadingActivites = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      runInAction(() => (this.loadingFollowings = false));\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivites = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(\r\n        username,\r\n        predicate!\r\n      );\r\n      runInAction(() => {\r\n        this.userActivites = activities;\r\n        this.loadingActivites = false;\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n      runInAction(() => (this.loadingActivites = false));\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) {\r\n      this.user.image = image;\r\n    }\r\n  };\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport { ProfileStore } from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection\r\n        .start()\r\n        .catch((error) =>\r\n          console.log(\"Error establishing the connection: \", error)\r\n        );\r\n\r\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => {\r\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\r\n          });\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Error stopping connection: \", error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item as={NavLink} exact to=\"/\" header>\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\r\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        <Menu.Item position=\"right\">\r\n          <Image\r\n            src={user?.image || \"/assets/user.png\"}\r\n            avatar\r\n            spaced=\"right\"\r\n          />\r\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item\r\n                as={Link}\r\n                to={`/profiles/${user?.username}`}\r\n                text=\"My Profile\"\r\n                icon=\"user\"\r\n              />\r\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\nimport { Header, Menu } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n  return (\r\n    <>\r\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\r\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\r\n        <Menu.Item\r\n          content=\"All Activities\"\r\n          active={predicate.has(\"all\")}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date: Date) => setPredicate(\"startDate\", date as Date)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>Bio goes here</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount} followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({\r\n  attendees,\r\n}: Props) {\r\n  const styles = {\r\n    borderColor: \"orange\",\r\n    borderWidth: 3,\r\n  };\r\n\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendee.username}\r\n              as={Link}\r\n              to={`/profiles/${attendee.username}`}\r\n            >\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default function ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            attached=\"top\"\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n            style={{ textAlign: \"center\" }}\r\n          />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size=\"tiny\"\r\n              circular\r\n              src={activity.host?.image || \"/assets/user.png\"}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by{\" \"}\r\n                <Link to={`/profiles/${activity.hostUsername}`}>\r\n                  {activity.host?.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"orange\">\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color=\"green\">\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\r\n          <Icon name=\"marker\" /> {activity.venue}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          color=\"teal\"\r\n          floated=\"right\"\r\n          content=\"View\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nexport default observer(function ActivityList() {\r\n  const { activityStore } = useStore();\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color=\"teal\">\r\n            {group}\r\n          </Header>\r\n          {activities.map((activity) => (\r\n            <ActivityListItem key={activity.id} activity={activity} />\r\n          ))}\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport { PagingParams } from \"../../../app/models/pagination\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nexport default observer(function ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegistry, setPagingParams, pagination } =\r\n    activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [activityRegistry.size, loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={\r\n              !loadingNext &&\r\n              !!pagination &&\r\n              pagination.currentPage < pagination.totalPages\r\n            }\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  label?: string;\r\n  type?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up for Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n            loading={isSubmitting}\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Container, Header, Image, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              to=\"/login\"\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login!\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              to=\"/login\"\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register!\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({\r\n  inverted = true,\r\n  content = \"Loading...\",\r\n}: Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n  { text: \"Drinks\", value: \"drinks\" },\r\n  { text: \"Culture\", value: \"culture\" },\r\n  { text: \"Film\", value: \"film\" },\r\n  { text: \"Food\", value: \"food\" },\r\n  { text: \"Music\", value: \"music\" },\r\n  { text: \"Travel\", value: \"travel\" },\r\n];\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\n\r\nexport default observer(function ActivityForm() {\r\n  const { activityStore } = useStore();\r\n  const { createActivity, updateActivity, loadActivity, loadingInitial } =\r\n    activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n  const history = useHistory();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"The activity title is required\"),\r\n    description: Yup.string().required(\"The activity description is required\"),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required(\"Date is required\").nullable(),\r\n    venue: Yup.string().required(),\r\n    city: Yup.string().required(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id)\r\n      loadActivity(id).then((activity) =>\r\n        setActivity(new ActivityFormValues(activity))\r\n      );\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() =>\r\n        history.push(`/activities/${newActivity.id}`)\r\n      );\r\n    } else {\r\n      updateActivity(activity).then(() =>\r\n        history.push(`/activities/${activity.id}`)\r\n      );\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content=\"Activity Details\" sub color=\"teal\" />\r\n      <Formik\r\n        validationSchema={validationSchema}\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n      >\r\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\r\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\r\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\r\n            <MySelectInput\r\n              options={categoryOptions}\r\n              placeholder=\"Category\"\r\n              name=\"category\"\r\n            />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption=\"time\"\r\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n            />\r\n            <Header content=\"Location Details\" sub color=\"teal\" />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive\r\n              type=\"submit\"\r\n              content=\"Submit\"\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to=\"/activities\"\r\n              floated=\"right\"\r\n              type=\"submit\"\r\n              content=\"Cancel\"\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { Formik, Form, Field, FieldProps } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { formatDistanceToNow } from \"date-fns\";\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n    return () => {\r\n      commentStore.clearComments();\r\n    };\r\n  }, [commentStore, activityId]);\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) =>\r\n            commentStore.addComment(values).then(() => resetForm())\r\n          }\r\n          initialValues={{ body: \"\" }}\r\n          validationSchema={Yup.object({\r\n            body: Yup.string().required(),\r\n          })}\r\n        >\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className=\"ui form\">\r\n              <Field name=\"body\">\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line\"\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === \"Enter\" && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === \"Enter\" && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)}</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\r\n                  {comment.body}\r\n                </Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendence, loading, cancelActivityToggle },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color=\"red\"\r\n            content=\"Cancelled\"\r\n          />\r\n        )}\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <strong>\r\n                    <Link to={`/profiles/${activity.host?.username}`}>\r\n                      {activity.host?.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? \"green\" : \"red\"}\r\n              floated=\"left\"\r\n              basic\r\n              content={\r\n                activity.isCancelled\r\n                  ? \"Re-activate Activity\"\r\n                  : \"Cancel Activity\"\r\n              }\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}\r\n            />\r\n            <Button\r\n              disabled={activity.isCancelled}\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={updateAttendence}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            disabled={activity.isCancelled}\r\n            loading={loading}\r\n            onClick={updateAttendence}\r\n            color=\"teal\"\r\n          >\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar({\r\n  activity: { attendees, host },\r\n}: Props) {\r\n  if (!attendees) return null;\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map((attendee) => (\r\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\r\n              {attendee.username === host?.username && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profiles/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../app/stores/store\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const {\r\n    selectedActivity: activity,\r\n    loadActivity,\r\n    loadingInitial,\r\n    clearSelectedActivity,\r\n  } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id);\r\n    return () => clearSelectedActivity();\r\n  }, [id, loadActivity, clearSelectedActivity]);\r\n\r\n  if (!activity || loadingInitial) return <LoadingComponent />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"activities/notaguid\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere and could not find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to={`/activities`} primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal\r\n      open={modalStore.modal.open}\r\n      onClose={modalStore.closeModal}\r\n      size=\"mini\"\r\n    >\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { format } from \"date-fns\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Grid, Header, Image, Tab, TabProps } from \"semantic-ui-react\";\r\nimport { UserActivity } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const { loadUserActivities, profile, loadingActivites, userActivites } =\r\n    profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivites}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content=\"Activities\" />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivites.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowings() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                loading={loading}\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n              />\r\n              <Button\r\n                disabled={loading}\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUPload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUPload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={\"main\" + photo.id}\r\n                        disabled={photo.isMain}\r\n                        loading={target === \"main\" + photo.id && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        name={photo.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n\r\n  const panes = [\r\n    { menuItem: \"About\", render: () => <Tab.Pane>About Content</Tab.Pane> },\r\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: \"Events\", render: () => <ProfileActivities /> },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => <ProfileFollowings />,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadProfile, loadingProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import {\r\n  Redirect,\r\n  Route,\r\n  RouteComponentProps,\r\n  RouteProps,\r\n} from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./NavBar\";\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\r\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\r\nimport TestErrors from \"../../features/errors/testErrors\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport { useStore } from \"../stores/store\";\r\nimport { useEffect } from \"react\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport ModalContainer from \"../common/modals/ModalContainer\";\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\r\n    } else {\r\n      commonStore.setAppLoaded();\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded)\r\n    return <LoadingComponent content=\"Loading app...\" />;\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <PrivateRoute\r\n                  exact\r\n                  path=\"/activities\"\r\n                  component={ActivityDashboard}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/activities/:id\"\r\n                  component={ActivityDetails}\r\n                />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={[\"/createActivity\", \"/manage/:id\"]}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/profiles/:username\"\r\n                  component={ProfilePage}\r\n                />\r\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"react-toastify/dist/ReactToastify.min.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./app/layout/styles.css\";\r\nimport App from \"./app/layout/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\nimport { StoreContext, store } from \"./app/stores/store\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <StoreContext.Provider value={store}>\r\n    <Router history={history}>\r\n      <ScrollToTop />\r\n      <App />\r\n    </Router>\r\n  </StoreContext.Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}